// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model TwitterUser {
  id           String               @id
  name         String
  username     String
  created_at   DateTime
  tweets       TwitterTweet[]
  likes        TwitterLike[]
  staged_likes TwitterLikeStaging[]
}

model TwitterTweet {
  id           String               @id
  text         String
  created_at   DateTime
  author       TwitterUser          @relation(fields: [author_id], references: [id])
  author_id    String
  media        TwitterMedia[]
  likes        TwitterLike[]
  staged_likes TwitterLikeStaging[]
}

model TwitterLike {
  index      Int          @id @default(autoincrement())
  user       TwitterUser  @relation(fields: [user_id], references: [id])
  user_id    String
  tweet      TwitterTweet @relation(fields: [tweet_id], references: [id])
  tweet_id   String
  created_at DateTime     @default(now())

  @@unique([user_id, tweet_id])
}

model TwitterLikeStaging {
  index      Int          @id @default(autoincrement())
  user       TwitterUser  @relation(fields: [user_id], references: [id])
  user_id    String
  tweet      TwitterTweet @relation(fields: [tweet_id], references: [id])
  tweet_id   String
  job        Job          @relation(fields: [job_id], references: [id])
  job_id     Int
  created_at DateTime     @default(now())

  @@unique([user_id, tweet_id, job_id])
}

model TwitterMedia {
  media_key String       @id
  type      String
  url       String
  tweet     TwitterTweet @relation(fields: [tweet_id], references: [id])
  tweet_id  String
  file      LocalFile    @relation(fields: [file_id], references: [sha256])
  file_id   Bytes
}

model LocalFile {
  sha256            Bytes          @id
  created_at        DateTime
  size              Int
  file_extension    FileExtension  @relation(fields: [file_extension_id], references: [id])
  file_extension_id Int
  mime              Mime           @relation(fields: [mime_id], references: [id])
  mime_id           Int
  media             TwitterMedia[]
}

model FileExtension {
  id    Int         @id @default(autoincrement())
  ext   String      @unique
  files LocalFile[]
}

model Mime {
  id    Int         @id @default(autoincrement())
  name  String      @unique
  files LocalFile[]
}

// Tracks progress of different file import tasks
model Job {
  id           Int                  @id @default(autoincrement())
  type         String
  args         String
  created_at   DateTime             @default(now())
  updated_at   DateTime             @updatedAt
  staged_likes TwitterLikeStaging[]
}

// Auth storage
model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
